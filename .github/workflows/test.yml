name: 🧪 Run Tests

on:
  workflow_run:
    workflows: ["🚀 Deploy"]
    types:
      - completed
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📦 Install dependencies
        run: npm install

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: ⌛ Wait for deployment to be accessible
        run: |
          # Get the branch name
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            # For workflow_run events, get the branch from the triggering workflow
            BRANCH="${{ github.event.workflow_run.head_branch }}"
          else
            # For manual triggers, get the current branch
            BRANCH=${GITHUB_REF#refs/heads/}
          fi
          
          REPO=${GITHUB_REPOSITORY#*/}
          PREVIEW_URL="https://${GITHUB_REPOSITORY_OWNER}.github.io/$REPO/$BRANCH/"
          echo "Waiting for deployment at: $PREVIEW_URL"
          
          # Function to check if URL is accessible
          check_url() {
            curl --output /dev/null --silent --head --fail "$1"
            return $?
          }
          
          # Wait for up to 2 minutes
          TIMEOUT=120
          while [ $TIMEOUT -gt 0 ]; do
            if check_url "$PREVIEW_URL"; then
              echo "✅ Deployment is ready!"
              break
            fi
            echo "Waiting for deployment... ($TIMEOUT seconds remaining)"
            sleep 10
            TIMEOUT=$((TIMEOUT-10))
          done
          
          if [ $TIMEOUT -eq 0 ]; then
            echo "❌ Deployment not ready after 2 minutes"
            exit 1
          fi
          
          # Export the URL for later steps
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

      - name: 🧪 Run Playwright tests
        env:
          BASE_URL: ${{ env.PREVIEW_URL }}
        run: npm run test:e2e

      - name: 📊 Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30 