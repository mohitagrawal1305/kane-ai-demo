name: üß™ Run Tests

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: üîç Get branch info
        id: branch-info
        run: |
          echo "ref=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: ‚åõ Wait for deploy workflow
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ steps.branch-info.outputs.sha }}
          check-name: deploy
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: üì• Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.branch-info.outputs.ref }}
          fetch-depth: 0

      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üé≠ Install Playwright browsers
        run: npx playwright install --with-deps

      - name: ‚åõ Wait for deployment to be accessible
        id: wait-for-deployment
        run: |
          BRANCH="${{ steps.branch-info.outputs.ref }}"
          REPO=${GITHUB_REPOSITORY#*/}
          PREVIEW_URL="https://${GITHUB_REPOSITORY_OWNER}.github.io/$REPO/$BRANCH/"
          echo "Waiting for deployment at: $PREVIEW_URL"
          
          # Function to check if URL is accessible
          check_url() {
            curl --output /dev/null --silent --head --fail "$1"
            return $?
          }
          
          # Wait for up to 2 minutes
          TIMEOUT=120
          while [ $TIMEOUT -gt 0 ]; do
            if check_url "$PREVIEW_URL"; then
              echo "‚úÖ Deployment is ready!"
              echo "url=$PREVIEW_URL" >> $GITHUB_OUTPUT
              break
            fi
            echo "Waiting for deployment... ($TIMEOUT seconds remaining)"
            sleep 10
            TIMEOUT=$((TIMEOUT-10))
          done
          
          if [ $TIMEOUT -eq 0 ]; then
            echo "‚ùå Deployment not ready after 2 minutes"
            exit 1
          fi

      - name: üß™ Run Playwright tests
        env:
          BASE_URL: ${{ steps.wait-for-deployment.outputs.url }}
        run: |
          # Remove trailing slash if present
          BASE_URL_CLEAN=$(echo "$BASE_URL" | sed 's/\/$//')
          echo "Running tests against: $BASE_URL_CLEAN"
          BASE_URL="$BASE_URL_CLEAN" npm run test:e2e

      - name: üìä Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30 